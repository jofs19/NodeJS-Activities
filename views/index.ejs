<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Activity 1</title>

    <style>
        *{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
      
        .container{
            position: relative;
        }
        
        .text{
            font-family: 'Roboto Mono', monospace;
            font-size: 3.5rem;
        }
        
        .text_hide{
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: #0040C1;
            

        }
        
        .text_cursor{
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: transparent;
            border-left: 3px solid #fff;
        }

        @import url('https://fonts.googleapis.com/css?family=Montserrat:700');
        .hero {
          background-color: #0040C1;
          position: relative;
          height: 100vh;
          overflow: hidden;
          font-family: 'Montserrat', sans-serif;
        }
        .hero__title {
          color: #fff;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          font-size: 50px;
          z-index: 1;
        }
        .cube {
          position: absolute;
          top: 80vh;
          left: 45vw;
          width: 10px;
          height: 10px;
          border: solid 1px #003298;
          transform-origin: top left;
          transform: scale(0) rotate(0deg) translate(-50%, -50%);
          animation: cube 12s ease-in forwards infinite;
        }
        .cube:nth-child(2n) {
          border-color: #0051f4;
        }
        .cube:nth-child(2) {
          animation-delay: 2s;
          left: 25vw;
          top: 40vh;
        }
        .cube:nth-child(3) {
          animation-delay: 4s;
          left: 75vw;
          top: 50vh;
        }
        .cube:nth-child(4) {
          animation-delay: 6s;
          left: 90vw;
          top: 10vh;
        }
        .cube:nth-child(5) {
          animation-delay: 8s;
          left: 10vw;
          top: 85vh;
        }
        .cube:nth-child(6) {
          animation-delay: 10s;
          left: 50vw;
          top: 10vh;
        }
        @keyframes cube {
          from {
            transform: scale(0) rotate(0deg) translate(-50%, -50%);
            opacity: 1;
          }
          to {
            transform: scale(20) rotate(960deg) translate(-50%, -50%);
            opacity: 0;
          }
        }

        @keyframes rotation {
            0% {
              transform: rotate(0deg); }
            100% {
              transform: rotate(360deg); } }
          #loader-wrapper {
            background-color: #FFFFFF;
            position: fixed;
            z-index: 999;
            width: 100%;
            height: 100%;
            text-align: center; }
          .loader {
            width: 40px;
            height: 40px;
            border: 5px solid #000000;
            border-bottom-color: transparent;
            border-radius: 50%;
            margin-top:calc(50vh - 20px);
            display: inline-block;
            box-sizing: border-box;
            -webkit-animation: rotation 1s linear infinite;
            animation: rotation 1s linear infinite; }

     

    </style>

</head>
<body>

    <div id="loader-wrapper">
        <div class="loader"></div>
    </div>

    <div class="hero"> 
        <div class="hero__title">
            
            <div class="container">
                <div class="text_hide"></div>
                <!----------------------------->
                <!--Change the number of words in the text and the animation will still work-->
                <div class="text">Hello, <%=name%>!</div>

                <!-------------------------------------->
                <div class="text_cursor"></div>
            </div>

        </div>
        <div class="cube"></div>
        <div class="cube"></div>
        <div class="cube"></div>
        <div class="cube"></div>
        <div class="cube"></div>
        <div class="cube"></div>
      </div>



        

    
</body>


<script>
    function typing_animation() {
        let text_element = document.querySelector(".text");
        let text_array = text_element.innerHTML.split("");
        let text_array_slice = text_element.innerHTML.split(" ");
        let text_len = text_array.length;
    
        const word_len = text_array_slice.map((word) => {
            return word.length;
        })
    
        console.log(word_len);
    
        let timings = {
            easing: `steps(${Number(word_len[0] + 1)}, end)`,
            delay: 2000,
            duration: 2000,
            fill: 'forwards'
        }
    
        let cursor_timings = {
            duration: 700,
            iterations: Infinity,
            easing: 'cubic-bezier(0,.26,.44,.93)'
        }
    
        document.querySelector(".text_cursor").animate([
            {
                opacity: 0
            },
            {
                opacity: 0, offset: 0.7
            },
            {
                opacity: 1
            }
        ], cursor_timings);
    
        if (text_array_slice.length == 1) {
            timings.easing = `steps(${Number(word_len[0])}, end)`;
    
            let reveal_animation = document.querySelector(".text_hide").animate([
                { left: '0%' },
                { left: `${(100 / text_len) * (word_len[0])}%` }
            ], timings);
    
            document.querySelector(".text_cursor").animate([
                { left: '0%' },
                { left: `${(100 / text_len) * (word_len[0])}%` }
            ], timings);
    
            reveal_animation.onfinish = () => {
                setTimeout(() => {
                    document.querySelector('.text_hide').animate([
                        {left: '0%'}
                    ], {
                        duration: 2000,
                        easing: 'cubic-bezier(.73,0,.38,.88)'
                    });
                    document.querySelector('.text_cursor').animate([
                        {left: '0%'}
                    ], {
                        duration: 2000,
                        easing: 'cubic-bezier(.73,0,.38,.88)'
                    });
                    typing_animation();
                }, 1000);
            }
        } else {
            document.querySelector(".text_hide").animate([
                { left: '0%' },
                { left: `${(100 / text_len) * (word_len[0] + 1)}%` }
            ], timings);
    
            document.querySelector(".text_cursor").animate([
                { left: '0%' },
                { left: `${(100 / text_len) * (word_len[0] + 1)}%` }
            ], timings);
        }
    
    
        for (let i = 1; i < text_array_slice.length; i++) {
            console.log(word_len);
            console.log(text_array_slice.length);
            const single_word_len = word_len[i];
            console.log(single_word_len);
    
            if (i == 1) {
                var left_instance = (100 / text_len) * (word_len[i - 1] + 1);
                console.log(left_instance);
            }
    
            let timings_2 = {
                easing: `steps(${Number(single_word_len + 1)}, end)`,
                delay: (2 * (i + 1) + (2 * i)) * (700),
                // delay: ((i*2)-1)*1000,
                duration: 2000,
                fill: 'forwards'
            }
    
            if (i == (text_array_slice.length - 1)) {
                timings_2.easing = `steps(${Number(single_word_len)}, end)`;
                let reveal_animation = document.querySelector(".text_hide").animate([
                    { left: `${left_instance}%` },
                    { left: `${left_instance + ((100 / text_len) * (word_len[i]))}%` }
                ], timings_2);
    
                document.querySelector(".text_cursor").animate([
                    { left: `${left_instance}%` },
                    { left: `${left_instance + ((100 / text_len) * (word_len[i]))}%` }
                ], timings_2);
    
                reveal_animation.onfinish = () => {
                    setTimeout(() => {
                        document.querySelector('.text_hide').animate([
                            {left: '0%'}
                        ], {
                            duration: 2000,
                            easing: 'cubic-bezier(.73,0,.38,.88)'
                        });
                        document.querySelector('.text_cursor').animate([
                            {left: '0%'}
                        ], {
                            duration: 2000,
                            easing: 'cubic-bezier(.73,0,.38,.88)'
                        });
                        typing_animation();
                    }, 1000);
                }
            } else {
                document.querySelector(".text_hide").animate([
                    { left: `${left_instance}%` },
                    { left: `${left_instance + ((100 / text_len) * (word_len[i] + 1))}%` }
                ], timings_2);
    
                document.querySelector(".text_cursor").animate([
                    { left: `${left_instance}%` },
                    { left: `${left_instance + ((100 / text_len) * (word_len[i] + 1))}%` }
                ], timings_2);
            }
    
            left_instance = left_instance + ((100 / text_len) * (word_len[i] + 1));
        }
    }
    typing_animation();
</script>

<script src="https://code.jquery.com/jquery-3.6.1.min.js" crossorigin="anonymous"></script>

<script type="text/javascript">
    $(window).on('load', function() {
      $("#loader-wrapper").fadeOut(700);
    });
  </script>

</html>